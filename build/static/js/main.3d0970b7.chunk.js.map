{"version":3,"sources":["components/reviewsSection/FeedbackOptions.js","components/reviewsSection/Statistics.js","components/Section.js","App.js","index.js"],"names":["FeedbackOptions","props","onLeaveFeedback","onClick","Statistics","good","neutral","bad","total","positivePercentage","className","Section","title","children","App","state","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","sumState","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAYeA,EAXS,SAAAC,GACtB,IAAQC,EAAoBD,EAApBC,gBACR,OACE,qCACE,wBAAQC,QAAS,kBAAMD,EAAgB,CAAC,UAAxC,kBACA,wBAAQC,QAAS,kBAAMD,EAAgB,CAAC,aAAxC,qBACA,wBAAQC,QAAS,kBAAMD,EAAgB,CAAC,SAAxC,qBC6BSE,EAlCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,qBAAIC,UAAU,aAAd,UACGF,IACC,qCACE,wCACQ,+BAAOH,OAGf,2CACW,+BAAOC,OAElB,uCACO,+BAAOC,OAEd,yCACS,+BAAOC,YAIlB,mDAGDC,KAAwB,GACvB,qDACqB,+BAAOA,IAAuB,eCjB9CE,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,mCACE,oCACE,oBAAIH,UAAU,QAAd,SAAuBE,IACtBC,QCwCMC,E,4MAvCbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPL,gBAAkB,SAAAc,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,EAI9BG,mBAAqB,kBACnB,EAAKJ,MAAMV,KAAO,EAAKU,MAAMT,QAAU,EAAKS,MAAMR,K,EAEpDa,gCAAkC,WAChC,IAAMC,EAAW,EAAKN,MAAMV,KAAO,EAAKU,MAAMT,QAAU,EAAKS,MAAMR,IAEnE,OADee,KAAKC,MAAyB,IAAlB,EAAKR,MAAMV,KAAcgB,I,4CAItD,WACE,OACE,qCACE,cAAC,EAAD,CAAST,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBV,gBAAiBsB,KAAKtB,oBAEzC,cAAC,EAAD,CAASU,MAAO,aAAhB,SACE,cAAC,EAAD,CACEP,KAAMmB,KAAKT,MAAMV,KACjBC,QAASkB,KAAKT,MAAMT,QACpBC,IAAKiB,KAAKT,MAAMR,IAChBC,MAAOgB,KAAKL,mBACZV,mBAAoBe,KAAKJ,2C,GAjCnBK,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3d0970b7.chunk.js","sourcesContent":["import React from 'react';\nconst FeedbackOptions = props => {\n  const { onLeaveFeedback } = props;\n  return (\n    <>\n      <button onClick={() => onLeaveFeedback(['good'])}>Good</button>\n      <button onClick={() => onLeaveFeedback(['neutral'])}>Neutral</button>\n      <button onClick={() => onLeaveFeedback(['bad'])}>Bad</button>\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <ul className=\"Statistics\">\n        {total() ? (\n          <>\n            <li>\n              good: <span>{good}</span>\n            </li>\n\n            <li>\n              Neutral: <span>{neutral}</span>\n            </li>\n            <li>\n              Bad: <span>{bad}</span>\n            </li>\n            <li>\n              total: <span>{total()}</span>\n            </li>\n          </>\n        ) : (\n          <li>No feedback given</li>\n        )}\n\n        {positivePercentage() >= 1 && (\n          <li>\n            Positive Feedback: <span>{positivePercentage() + '%'}</span>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Statistics;\n","const Section = ({ title, children }) => {\n  return (\n    <>\n      <section>\n        <h2 className=\"title\">{title}</h2>\n        {children}\n      </section>\n    </>\n  );\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/reviewsSection/FeedbackOptions';\nimport Statistics from './components/reviewsSection/Statistics';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = name => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () => {\n    const sumState = this.state.good + this.state.neutral + this.state.bad;\n    const resSum = Math.floor((this.state.good * 100) / sumState);\n    return resSum;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title={'Statistics'}>\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback}\n            positivePercentage={this.countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}